version: '3'

services:
  app:
    build:
      context: ./
    volumes:
      - .:/var/www/html
#    ports:
#      - "8080:80"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.edtpv2r.middlewares=www-to-non-www@file, redirect-to-https"
      - "traefik.http.routers.edtpv2r.entrypoints=web"
      - "traefik.http.routers.edtpv2r.rule=Host(`edtp.apio.io`)"
      - "traefik.http.routers.edtpv2.entrypoints=websecure"
      - "traefik.http.routers.edtpv2.rule=Host(`edtp.apio.io`)"
      - "traefik.http.routers.edtpv2.middlewares=www-to-non-www@file"
      - "traefik.http.routers.edtpv2.tls=true"
      - "traefik.http.routers.edtpv2.tls.certresolver=tls"
      - "traefik.http.services.edtpv2.loadbalancer.server.port=80"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - ./db:/var/lib/mysql

networks:
  default:
    external:
      name: reverse-proxy
